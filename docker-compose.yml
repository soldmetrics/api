networks:
  app-tier:
    driver: bridge

services:
  gateway:
    image: nginx:latest
    ports:
      - '80:80'
    container_name: gateway
    networks:
      - app-tier
    depends_on:
      - auth
      - sales
    volumes:
      - ./api-gateway/nginx.conf:/etc/nginx/conf.d/default.conf
  # rabbitmq:
  #   image: rabbitmq
  #   ports:
  #     - '5672:5672'
  database:
    image: postgres:16.0
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres2023
      - POSTGRES_DB=sold-metrics
    networks:
      - app-tier
    ports:
      - '5432:5432'
    volumes:
      - database:/var/lib/postgresql/data
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    ports:
      - '3001:3001'
    networks:
      - app-tier
    env_file:
      - ./apps/auth/.env.dev
    depends_on:
      - database
      # - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  sales:
    build:
      context: .
      dockerfile: ./apps/sales/Dockerfile
      target: development
    command: npm run start:dev sales
    networks:
      - app-tier
    env_file:
      - ./apps/sales/.env.dev
    depends_on:
      - database
      - auth
      # - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'

volumes:
  database:
    driver: local
